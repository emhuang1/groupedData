pTreatment <- 0.5 ##probability of being assigned to treatment group
trueBeta <- 0 ##treatment effect
n <- 200 ##sample size of each simulated randomized trial
set.seed(seed)
simSeeds <- sample(10^9,K)
visit1Time <- 2
visit2Time <- 4
visit3Time <- 6
nMethods <- 5
result <- matrix(NA, nrow = K, ncol = nMethods * 2)
nties <- matrix(NA, nrow = K, ncol = 3)
for(k in 1:K){
set.seed(simSeeds[k])
###################################################################################
##Generation of Z (random treatment assignment: 1 if control, 0 if treatment)##
###################################################################################
data <- data.frame(Z=rbinom(n,size=1,prob=pTreatment))
###################################################################################
##Generation of C (censoring time, the last visit the subject attends)##
###################################################################################
data$C <- sample(x=0:m,size=n,replace = TRUE, prob = c(.08,.1,.1,.72))
###################################################################################
##Generation of T (frailty time)##
###################################################################################
##Failure time generated from the Weibull hazard
a <- 2
b <- 100
u <- -log(runif(n))
exb <- exp(trueBeta*data$Z)
data$Tcont <- NA
for(i in 1:n){
data$Tcont[i] <- uniroot(froot, interval=c(1.e-14, 1e04), u = u[i], exb = exb[i], a=a, b=b)$root
}
rm(a,b,u,exb)
#hist(data$Tcont)
#summary(data$Tcont)
###################################################################################
##Generation of T' (grouped frailty time)##
###################################################################################
data$Tgrouped <- 10000
for(i in 1:n){
if(data$Tcont[i]==0){
data$Tgrouped[i] <- 0
}else if(0<data$Tcont[i]&data$Tcont[i]<=visit1Time){
data$Tgrouped[i] <- 1
}else if(visit1Time<data$Tcont[i] & data$Tcont[i]<=visit2Time){
data$Tgrouped[i] <- 2
}else if(visit2Time<data$Tcont[i] & data$Tcont[i]<=visit3Time){
data$Tgrouped[i] <- 3
}
}
###################################################################################
##Calculate delta (censoring indicator) and V (visit time depending on delta)##
###################################################################################
data$delta <- 1
data$delta[data$Tgrouped>data$C] <- 0
data$V <- data$delta*data$Tgrouped + (1-data$delta)*data$C
#table(data$C)/n
#table(data$Tgrouped)/n
#table(data$delta,data$V)/n
#temp <- table(data$delta,data$V)/n
#sum(temp[1,1:3]) #proportion of n subjects who dropout early
#temp[1,4] #proportion of n subjects who are adminstratively censored
#sum(temp[2,]) #proportion who are observed to be frail
data <- data.frame(delta = data$delta, V = data$V, Z = data$Z)
data <- subset(data, V!=0)
nties[k,] <- table(data$delta, data$V)[2,]
temp <- table(data$delta,data$V)/n
if (nrow(temp)!=2) {
result[k,] <- rep(NA,times=nMethods * 2)
warning(paste(k, ":Either no censoring or no failure."))
} else {
result[k,] <- applyMethods(data)
}
}
k <- 457
set.seed(simSeeds[k])
data <- data.frame(Z=rbinom(n,size=1,prob=pTreatment))
data$C <- sample(x=0:m,size=n,replace = TRUE, prob = c(.08,.1,.1,.72))
a <- 2
b <- 100
u <- -log(runif(n))
exb <- exp(trueBeta*data$Z)
data$Tcont <- NA
for(i in 1:n){
data$Tcont[i] <- uniroot(froot, interval=c(1.e-14, 1e04), u = u[i], exb = exb[i], a=a, b=b)$root
}
rm(a,b,u,exb)
data$Tgrouped <- 10000
for(i in 1:n){
if(data$Tcont[i]==0){
data$Tgrouped[i] <- 0
}else if(0<data$Tcont[i]&data$Tcont[i]<=visit1Time){
data$Tgrouped[i] <- 1
}else if(visit1Time<data$Tcont[i] & data$Tcont[i]<=visit2Time){
data$Tgrouped[i] <- 2
}else if(visit2Time<data$Tcont[i] & data$Tcont[i]<=visit3Time){
data$Tgrouped[i] <- 3
}
}
data$delta <- 1
data$delta[data$Tgrouped>data$C] <- 0
data$V <- data$delta*data$Tgrouped + (1-data$delta)*data$C
data <- data.frame(delta = data$delta, V = data$V, Z = data$Z)
data <- subset(data, V!=0)
nties[k,] <- table(data$delta, data$V)[2,]
result[k,] <- applyMethods(data)
result[k,]
PGloglik <- function(x, data){
k <- Nfollowup
p <- length(x) - k
pterm <- rep(0, nrow(data))
for (i in 1:p) pterm <- pterm + (data[,i+1] * x[i]) ##first column of data is id
sterm <- rep(0, nrow(data))
for (i in 1:k) sterm <- sterm + (data$seqvar == i) * x[i+p]
h.jx <- 1 - exp(-exp(pterm + sterm))
val <-  sum(data$y.ij*log(h.jx) + (1-data$y.ij)*log(1-h.jx))
return(val)
}
PGgradient <- function(x, data){
grad <- rep(NA, length(x))
k <- Nfollowup
p <- length(x) - k
pterm <- rep(0, nrow(data))
for (i in 1:p) pterm <- pterm + (data[,i+1] * x[i]) ##first column is id
sterm <- rep(0, nrow(data))
for (i in 1:k) sterm <- sterm + (data$seqvar == i) * x[i+p]
alpha.ij <- exp(pterm + sterm)
h.ij <- 1 - exp(-alpha.ij)
for (i in 1:p) grad[i] <- sum(data$y.ij*exp(-alpha.ij)*alpha.ij/(h.ij)*data[,i+1] - (1-data$y.ij)*exp(-alpha.ij)*alpha.ij/(1-h.ij)*data[,i+1])
for (i in 1:k) grad[p+i] <- sum((data$y.ij * exp(-alpha.ij)*alpha.ij/h.ij - (1-data$y.ij)*exp(-alpha.ij)*alpha.ij/(1-h.ij))*(data$seqvar == i))
return(grad)
}
PGhessian <- function(data, coefs.pg){
hessian <- matrix(NA, nrow = Nfollowup + numCov, ncol = Nfollowup + numCov)
pterm <- rep(0, nrow(data))
for (i in 1:numCov) pterm <- pterm + (data[,i+1] * coefs.pg[i]) ##first column is id
sterm <- rep(0, nrow(data))
for (i in 1:Nfollowup) sterm <- sterm + (data$seqvar == i) * coefs.pg[i+numCov]
alpha.ij <- exp(pterm + sterm)
h.ij <- 1 - exp(-alpha.ij)
x.ij <- 1/(exp(alpha.ij)-1)-alpha.ij*exp(alpha.ij)/(exp(alpha.ij)-1)^2
for (i in 1:numCov){
for (j in 1:numCov){
hessian[i,j] <- sum(data$y.ij*data[,1+i]*data[,1+j]*alpha.ij*x.ij-(1-data$y.ij)*data[,1+i]*data[,1+j]*alpha.ij)
}
}
for (i in 1:Nfollowup){
for (j in 1:Nfollowup){
if (i != j) {
hessian[numCov+i,numCov+j] <- 0
} else {
hessian[numCov+i,numCov+i]<-sum((data$seqvar==i) * (data$y.ij*alpha.ij*x.ij-alpha.ij*(1-data$y.ij)))
}
}
}
for (i in 1:numCov){
for (j in 1:Nfollowup){
hessian[i,j+numCov] <- hessian[j+numCov, i] <- sum((data$seqvar==j)*(data$y.ij*alpha.ij*data[,1+i]*x.ij-(1-data$y.ij)*alpha.ij*data[,1+i]))
}
}
return(hessian)
}
ek <- unname(with(data,table(V, delta))[,2])
ek
dat <- data.frame(id = 1:nrow(data), data) ##dat will be data in long format
table(data$V, data$delta)
data <- subset(data, V != 1)
head(data)
ek <- unname(with(data,table(V, delta))[,2])
ek
followup_visits <- sort(unique(data$V))
Nfollowup <- length(followup_visits)
dat <- data.frame(id = 1:nrow(data), data) ##dat will be data in long format
dat$V <- as.numeric(as.factor(dat$V))
seqvar <- 1:dat$V[1] ##will define as in Jenkins STB
for(i in 2:nrow(dat)){
seqvar <- c(seqvar,1:dat$V[i])
}
dat <- dat[rep(1:nrow(dat),times=dat$V),]
dat$seqvar <- seqvar
dat$y.ij <- 0 ##we will define y.ij as in Jenkin's STB
dat$y.ij[dat$delta == 1 & dat$seqvar == dat$V] <- 1
dat <- dat[,-c(2,3)] ##remove delta and V columns
modPG <-  try(optim(c(rep(0, numCov), log(-log(1-(1+ek)/n))), PGloglik, gr = PGgradient, method="BFGS", data=dat, control=list(fnscale=-1), hessian = FALSE), silent=TRUE)
coefs.pg <-  modPG$par
modPG
numCov <- 1
modPG <-  try(optim(c(rep(0, numCov), log(-log(1-(1+ek)/n))), PGloglik, gr = PGgradient, method="BFGS", data=dat, control=list(fnscale=-1), hessian = FALSE), silent=TRUE)
coefs.pg <-  modPG$par
coefs.pg
result[k,]
350*1.06
0.23/0.485
0.255/0.485
0.13/0.515
0.385/0.515
0.485*(0.23/0.485-0.5)^2+0.485*(0.255/0.485-0.5)^2
a <- 0.485*(0.23/0.485-0.5)^2+0.485*(0.255/0.485-0.5)^2
0.515*(0.13/0.515-0.5)^2 + 0.515*(0.385/0.515-0.5)^2
b <- 0.515*(0.13/0.515-0.5)^2 + 0.515*(0.385/0.515-0.5)^2
a + b
(a+b)*200
load("~/Dropbox/research/Ravi/paper/Simulations/CHS_frailty/results/n500.Rdata")
head(nties)
hist(nties[,1])
hist(nties[,2])
summary(nties[,1])
summary(nties[,2])
load("~/Dropbox/research/Ravi/paper/Simulations/CHS_frailty/results/n1000.Rdata")
hist(nties[,1])
hist(nties[,2])
summary(nties[,1])
summary(nties[,2])
load("~/Dropbox/research/Ravi/paper/Simulations/CHS_frailty/results/n2000.Rdata")
hist(nties[,1])
hist(nties[,2])
summary(nties[,1])
summary(nties[,2])
rm(list=ls())
load("~/Dropbox/research/Ravi/paper/Simulations/CHS_frailty/results/n500.Rdata")
hist(nties[,1])
hist(nties[,2])
summary(nties[,1])
summary(nties[,2])
n <- 500
hist(nties[,1])
hist(nties[,2])
tab <- c(n, "Visit 1", summary(nties[,1]))
tab <- rbind(tab, n, "Visit 2", summary(nties[,2]))
tab
tab
tab <- c(n, "Visit 1", summary(nties[,1]))
tab <- rbind(tab, c(n, "Visit 2", summary(nties[,2])))
tab
rm(list=ls())
load("~/Dropbox/research/Ravi/paper/Simulations/CHS_frailty/results/n500.Rdata")
n <- 500
hist(nties[,1])
hist(nties[,2])
tab <- c(n, 1, summary(nties[,1]))
tab <- rbind(tab, c(n, 2, summary(nties[,2])))
tab
load("~/Dropbox/research/Ravi/paper/Simulations/CHS_frailty/results/n1000.Rdata")
n <- 1000
hist(nties[,1])
hist(nties[,2])
tab <- rbind(tab, c(n, 1, summary(nties[,1])))
tab <- rbind(tab, c(n, 2, summary(nties[,2])))
tab
load("~/Dropbox/research/Ravi/paper/Simulations/CHS_frailty/results/n2000.Rdata")
n <- 2000
hist(nties[,1])
hist(nties[,2])
tab <- rbind(tab, c(n, 1, summary(nties[,1])))
tab <- rbind(tab, c(n, 2, summary(nties[,2])))
tab
tab <- xtable(tab, align = "ccccccccc")
library(xtable)
tab <- xtable(tab, align = "ccccccccc")
digits(result) <- 0
digits(tab) <- 0
print(tab, include.rownames=FALSE)
rm(list=ls())
load("~/Dropbox/research/Ravi/paper/Simulations/CHS_frailty/results/n500.Rdata")
n <- 500
hist(nties[,1])
hist(nties[,2])
tab <- c(n, 1, summary(nties[,1]))
tab <- rbind(tab, c(n, 2, summary(nties[,2])))
load("~/Dropbox/research/Ravi/paper/Simulations/CHS_frailty/results/n1000.Rdata")
n <- 1000
hist(nties[,1])
hist(nties[,2])
tab <- rbind(tab, c(n, 1, summary(nties[,1])))
tab <- rbind(tab, c(n, 2, summary(nties[,2])))
load("~/Dropbox/research/Ravi/paper/Simulations/CHS_frailty/results/n2000.Rdata")
n <- 2000
hist(nties[,1])
hist(nties[,2])
tab <- rbind(tab, c(n, 1, summary(nties[,1])))
tab <- rbind(tab, c(n, 2, summary(nties[,2])))
library(xtable)
tab <- xtable(tab, align = "ccccccccc")
digits(tab) <- 0
print(tab, include.rownames=FALSE)
rm(list=ls())
setwd("~/Dropbox/research/Ravi/paper/Simulations/SingleCovariate/varyBeta/results")
Beta <- 0
n <- 200
load("Beta0_n200.Rdata")
fullResult <- c(Beta, n, summary(nties))
fullResult
fullResult <- c(Beta, n, summary(nties[,1]))
fullResult
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
summary(nties[,2])
c(Beta, n, 2, summary(nties[,2]))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult
rm(list=ls())
setwd("~/Dropbox/research/Ravi/paper/Simulations/SingleCovariate/varyBeta/results")
Beta <- 0
n <- 200
load("Beta0_n200.Rdata")
fullResult <- c(Beta, n, 1, summary(nties[,1]))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
fullResult
n <- 500
load("Beta0_n500.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
fullResult
n <- 2000
load("Beta0_n2000.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, estimator(Beta,result), ci(Beta,result)))
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
fullResult
rm(list=ls())
setwd("~/Dropbox/research/Ravi/paper/Simulations/SingleCovariate/varyBeta/results")
Beta <- 0
n <- 200
load("Beta0_n200.Rdata")
fullResult <- c(Beta, n, 1, summary(nties[,1]))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 500
load("Beta0_n500.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 2000
load("Beta0_n2000.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
fullResult
rm(list=ls())
setwd("~/Dropbox/research/Ravi/paper/Simulations/SingleCovariate/varyBeta/results")
#######################################
Beta <- 0
#######################################
n <- 200
load("Beta0_n200.Rdata")
fullResult <- c(Beta, n, 1, summary(nties[,1]))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 500
load("Beta0_n500.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 2000
load("Beta0_n2000.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
#######################################
Beta <- 0.2
#######################################
n <- 200
load("Beta02_n200.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 500
load("Beta02_n500.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 2000
load("Beta02_n2000.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
#######################################
Beta <- 0.4
#######################################
n <- 200
load("Beta04_n200.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 500
load("Beta04_n500.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 2000
load("Beta04_n2000.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
#######################################
Beta <- 0.6
#######################################
n <- 200
load("Beta06_n200.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 500
load("Beta06_n500.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 2000
load("Beta06_n2000.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
#######################################
Beta <- 0.8
#######################################
n <- 200
load("Beta08_n200.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 500
load("Beta08_n500.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 2000
load("Beta08_n2000.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
#######################################
Beta <- 1
#######################################
n <- 200
load("Beta10_n200.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 500
load("Beta10_n500.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 2000
load("Beta10_n2000.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
#######################################
Beta <- 2
#######################################
n <- 200
load("Beta20_n200.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 500
load("Beta20_n500.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
n <- 2000
load("Beta20_n2000.Rdata")
fullResult <- rbind(fullResult, c(Beta, n, 1, summary(nties[,1])))
fullResult <- rbind(fullResult, c(Beta, n, 2, summary(nties[,2])))
fullResult <- rbind(fullResult, c(Beta, n, 3, summary(nties[,3])))
View(fullResult)
fullResult <- data.frame(fullResult)
View(fullResult)
summary(nties[,3])
names <- c("Beta",
"n",
"Visit",
"Minimum",
"First Quartile",
"Median",
"Mean",
"Third Quartile",
"Maximum")
View(fullResult)
names <- c("Beta",
"n",
"Visit",
"Minimum",
"FirstQuartile",
"Median",
"Mean",
"ThirdQuartile",
"Maximum")
result200 <- subset(fullResult, n == 200)
result500 <- subset(fullResult, n == 500)
result2000 <- subset(fullResult, n == 2000)
result200
head(fullResult)
names(fullResult) <- c("Beta",
"n",
"Visit",
"Minimum",
"FirstQuartile",
"Median",
"Mean",
"ThirdQuartile",
"Maximum")
result200 <- subset(fullResult, n == 200)
result500 <- subset(fullResult, n == 500)
result2000 <- subset(fullResult, n == 2000)
result200
result500
